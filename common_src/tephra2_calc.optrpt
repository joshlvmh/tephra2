Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.3.222 Build 20180410

Compiler options: -O3 -qopt-report=5 -qopt-report-phase=vec -Wall

Begin optimization report for: tephra_calc(ERUPTION *, POINT *, WIND *, STATS *, GRAIN *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at tephra2_calc.c(119,3)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at tephra2_calc.c(119,3)
   <Distributed chunk1>
      remark #15389: vectorization support: reference pt->calculated_phi[i] has unaligned access   [ tephra2_calc.c(125,2) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.450 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at tephra2_calc.c(119,3)
   <Remainder loop for vectorization, Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at tephra2_calc.c(119,3)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at tephra2_calc.c(141,6)
   <Peeled>
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <((*(T+i*8))->total_fall_time)[j]>, stride is 10   [ tephra2_calc.c(143,24) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <((*(T+i*8))->wind_sum_x)[j]>, stride is 10   [ tephra2_calc.c(162,5) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <((*(T+i*8))->wind_sum_y)[j]>, stride is 10   [ tephra2_calc.c(165,5) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <((*(T+i*8))->plume_diffusion_fine_particle)[j]>, stride is 10   [ tephra2_calc.c(195,56) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <((*(T+i*8))->plume_diffusion_fine_particle)[j]>, stride is 10   [ tephra2_calc.c(195,56) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <((*(T+i*8))->plume_diffusion_fine_particle)[j]>, stride is 10   [ tephra2_calc.c(195,56) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <((*(T+i*8))->plume_diffusion_coarse_particle)[j]>, stride is 10   [ tephra2_calc.c(201,66) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <((*(T+i*8))->demon1)[j]>, stride is 10   [ tephra2_calc.c(213,17) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.179
      remark #15300: LOOP WAS VECTORIZED
      remark #15452: unmasked strided loads: 8 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 854 
      remark #15477: vector cost: 397.500 
      remark #15478: estimated potential speedup: 2.140 
      remark #15482: vectorized math library calls: 4 
      remark #15486: divides: 6 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at tephra2_calc.c(141,6)
   <Peeled, Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: get_rho(double, GRAIN *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at tephra2_calc.c(398,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: pdf_grainsize(double, double, double, GRAIN *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at tephra2_calc.c(398,2) inlined into tephra2_calc.c(440,14)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: plume_pdf0(double, double, double, double, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at tephra2_calc.c(526,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between num_slices_left (529:17) and num_slices_left (530:21)
   remark #15346: vector dependence: assumed FLOW dependence between num_slices_left (530:21) and num_slices_left (529:17)
   remark #15346: vector dependence: assumed ANTI dependence between num_slices_left (529:17) and num_slices_left (530:21)
LOOP END
===========================================================================

Begin optimization report for: plume_pdf2(double, double, double, double, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at tephra2_calc.c(630,9)
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.320
   remark #15300: LOOP WAS VECTORIZED
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 369 
   remark #15477: vector cost: 328.500 
   remark #15478: estimated potential speedup: 1.120 
   remark #15482: vectorized math library calls: 6 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at tephra2_calc.c(630,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: set_eruption_values(ERUPTION *, WIND *, GRAIN *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at tephra2_calc.c(774,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ tephra2_calc.c(398,2) ]

   LOOP BEGIN at tephra2_calc.c(398,2) inlined into tephra2_calc.c(775,16)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at tephra2_calc.c(806,9)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at tephra2_calc.c(822,9)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at tephra2_calc.c(847,25)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at tephra2_calc.c(398,2) inlined into tephra2_calc.c(839,21)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at tephra2_calc.c(847,9)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================
